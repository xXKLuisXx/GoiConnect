{"version":3,"sources":["webpack:///src/app/Auth/login-page/login-page.page.html","webpack:///src/app/Auth/login-page/login-page-routing.module.ts","webpack:///src/app/Auth/login-page/login-page.module.ts","webpack:///src/app/Auth/login-page/login-page.page.scss","webpack:///src/app/Auth/login-page/login-page.page.ts","webpack:///src/app/services/request.service.ts"],"names":["routes","path","component","LoginPagePageRoutingModule","imports","forChild","exports","LoginPagePageModule","declarations","LoginPagePage","router","authService","UserData","utils","console","log","loadingPresent","login","subscribe","Response","storeItem","JSON","stringify","buildAccessData","then","data","loadingDismiss","navigate","error","Errors","alertPresent","buildErrors","replaceUrl","selector","template","RequestService","httpClient","AUTH_SERVER_ADDRESS","HEADERS","END_POINTS","PARAMETERS","headers","endPoint","parameters","tokenRequired","token","set","forEach","Header","object","post","createHeaders","selectEnpoint","parameter","typeParameter","get","selectParameters","id","put","providedIn"],"mappings":"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","file":"Auth-login-page-login-page-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n\\t<ion-toolbar>\\r\\n\\t\\t<ion-title>LoginPage</ion-title>\\r\\n\\t</ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\t\\r\\n\\t<ion-card>\\r\\n\\t\\t<form (ngSubmit)=\\\"loginForm()\\\">\\r\\n\\t\\t\\t<ion-item lines=\\\"full\\\">\\r\\n\\t\\t\\t\\t<ion-icon name=\\\"mail-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n\\t\\t\\t\\t<ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n\\t\\t\\t\\t<ion-input type=\\\"text\\\" [(ngModel)]='UserData.email' name=\\\"email\\\" required></ion-input>\\r\\n\\t\\t\\t</ion-item>\\r\\n\\r\\n\\t\\t\\t<ion-item lines=\\\"full\\\">\\r\\n\\t\\t\\t\\t<ion-icon name=\\\"key-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n\\t\\t\\t\\t<ion-label position=\\\"floating\\\">\\r\\n\\t\\t\\t\\t\\tPassword\\r\\n\\t\\t\\t\\t</ion-label>\\r\\n\\t\\t\\t\\t<ion-input type=\\\"password\\\" [(ngModel)]='UserData.password' name=\\\"password\\\" required></ion-input>\\r\\n\\t\\t\\t</ion-item>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<ion-card-content>\\r\\n\\t\\t\\t\\t<ion-row>\\r\\n\\t\\t\\t\\t\\t<ion-col>\\r\\n\\t\\t\\t\\t\\t\\t<ion-button type=\\\"submit\\\" color=\\\"primary\\\" expand=\\\"block\\\">Sign In</ion-button>\\r\\n\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/forgot-password']\\\" class=\\\"small-text\\\">Forgot Password?</a>\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t</ion-row>\\r\\n\\t\\t\\t\\t<ion-row>\\r\\n\\t\\t\\t\\t\\t<ion-col>\\r\\n\\t\\t\\t\\t\\t\\t<ion-button color=\\\"danger\\\" expand=\\\"block\\\" (click)=\\\"RegisterPage()\\\">Register</ion-button>\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t</ion-row>\\r\\n\\t\\t\\t</ion-card-content>\\r\\n\\t\\t</form>\\r\\n\\t</ion-card>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPagePage } from './login-page.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPagePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPagePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPagePageRoutingModule } from './login-page-routing.module';\r\n\r\nimport { LoginPagePage } from './login-page.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPagePageRoutingModule\r\n  ],\r\n  declarations: [LoginPagePage]\r\n})\r\nexport class LoginPagePageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0F1dGgvbG9naW4tcGFnZS9sb2dpbi1wYWdlLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/Auth/auth.service';\r\nimport { User } from 'src/app/Models/Classes/user';\r\nimport { Utils } from 'src/app/Models/Classes/utils';\r\nimport { stringify } from 'querystring';\r\n\r\n\r\n@Component({\r\n    selector: 'app-login-page',\r\n    templateUrl: './login-page.page.html',\r\n    styleUrls: ['./login-page.page.scss'],\r\n})\r\nexport class LoginPagePage implements OnInit {\r\n    private UserData: User;\r\n    private utils: Utils;\r\n    \r\n    \r\n    constructor(\r\n        private router: Router,\r\n        private authService: AuthService,\r\n    ) {\r\n        this.UserData = new User();\r\n        this.utils = new Utils();\r\n    }\r\n\r\n    async ngOnInit() {\r\n\r\n    }\r\n\r\n    async ionViewDidEnter(){\r\n        \r\n    }\r\n\r\n    public async loginForm() {\r\n        console.log('entrar login');\r\n        await this.utils.loadingPresent();\r\n        this.authService.login(this.UserData).subscribe(\r\n            async (Response: (any)) => {\r\n                await this.utils.storeItem('AccessDataUser', JSON.stringify(this.utils.buildAccessData(Response))).then((data)=> {\r\n                    this.utils.loadingDismiss();\r\n                    this.router.navigate(['/social']);\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                });\r\n                this.utils.loadingDismiss();\r\n            },\r\n            (Errors: (any)) => {\r\n                this.utils.loadingDismiss();\r\n                this.utils.alertPresent('Errors', this.utils.buildErrors(Errors), 'OK');\r\n            },\r\n            () => {\r\n                this.utils.loadingDismiss();\r\n            }\r\n        );\r\n    }\r\n\r\n    public RegisterPage() {\r\n        this.router.navigate(['/register'], { replaceUrl: true });\r\n    }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class RequestService {\r\n\tprivate AUTH_SERVER_ADDRESS : string;\r\n\tprivate HEADERS : Array<Array<string>>;\r\n\tprivate END_POINTS : Array<string>;\r\n\tprivate PARAMETERS : Array<string>;\r\n\tprivate headers : HttpHeaders;\r\n\r\n\tconstructor(\r\n\t\tpublic httpClient : HttpClient\r\n\t) { \r\n\t\tthis.AUTH_SERVER_ADDRESS = 'http://192.168.100.100:8000/api/';\r\n\t\tthis.HEADERS = [['Content-Type', 'application/json'], ['Authorization', ''], ['responseType','text']];\r\n\t\tthis.END_POINTS = ['login', 'register', 'publications', 'assist', 'join', 'joined'];\r\n\t\tthis.PARAMETERS = ['?page=', '?id_detail=', '/'];\r\n\t\tthis.headers = new HttpHeaders();\r\n\t}\r\n\r\n\tprivate selectEnpoint(endPoint:string){\r\n\t\tswitch (endPoint) {\r\n\t\t\tcase 'login':\r\n\t\t\t\treturn this.END_POINTS[0];\r\n\t\t\tcase 'register':\r\n\t\t\t\treturn this.END_POINTS[1];\r\n\t\t\tcase 'publication':\r\n\t\t\t\treturn this.END_POINTS[2];\r\n\t\t\tcase 'assist':\r\n\t\t\t\treturn this.END_POINTS[3];\r\n\t\t\tcase 'join':\r\n\t\t\t\treturn this.END_POINTS[4];\r\n\t\t\tcase 'joined':\r\n\t\t\t\treturn this.END_POINTS[5];\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn \r\n\t}\r\n\r\n\tprivate selectParameters(parameters:string){\r\n\t\tswitch (parameters) {\r\n\t\t\tcase 'page':\r\n\t\t\t\treturn this.PARAMETERS[0];\r\n\t\t\tcase 'id_detail':\r\n\t\t\t\treturn this.PARAMETERS[1];\r\n\t\t\tcase 'id':\r\n\t\t\t\treturn this.PARAMETERS[2];\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn \r\n\t}\r\n\r\n\tprivate createHeaders( tokenRequired: boolean, token?: string ) : HttpHeaders {\r\n\t\tif( !tokenRequired ) this.headers = this.headers.set(this.HEADERS[0][0], this.HEADERS[0][1]);\r\n\t\telse{\r\n\t\t\tthis.HEADERS.forEach(Header => {\r\n\t\t\t\tif ( Header[0] === \"Authorization\"){\r\n\t\t\t\t\tif(token != null ){\r\n\t\t\t\t\t\tthis.headers = this.headers.set(Header[0], token);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.headers = this.headers.set(Header[0], Header[1]);\r\n\t\t\t\t}\t\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this.headers;\r\n\t}\r\n\r\n\tpublic createRequest(object: any, endPoint: string, post: boolean, token?: string) : Observable<any> {\r\n\t\tconst headers = this.createHeaders( post, token);\r\n\t\treturn this.httpClient.post<any>(this.AUTH_SERVER_ADDRESS + this.selectEnpoint(endPoint), object,  { headers } );\r\n\t}\r\n\r\n\tpublic createRequestGet(endPoint: string, post: boolean, token?: string, parameter?:number, typeParameter?:string) : Observable<any> {\r\n\t\tconst headers = this.createHeaders( post, token);\r\n\t\tif(parameter){\r\n\t\t\treturn this.httpClient.get<any>(this.AUTH_SERVER_ADDRESS + this.selectEnpoint(endPoint)+ this.selectParameters(typeParameter) +parameter, { headers } );\r\n\t\t}else{\r\n\t\t\treturn this.httpClient.get<any>(this.AUTH_SERVER_ADDRESS + this.selectEnpoint(endPoint), { headers } );\r\n\t\t}\r\n\t}\r\n\r\n\tpublic createRequestUpdate(parameter: string, endPoint: string, post: boolean, token?: string, id?:number) : Observable<any> {\r\n\t\tconst headers = this.createHeaders( post, token);\r\n\t\tconsole.log(headers);\r\n\t\treturn this.httpClient.put<any>(this.AUTH_SERVER_ADDRESS + this.selectEnpoint(endPoint) + this.selectParameters(parameter) + id , id, { headers } );\r\n\t}\r\n\r\n}\r\n"]}