{"version":3,"sources":["webpack:///src/app/Auth/register-page/register-page.page.html","webpack:///src/app/Auth/register-page/register-page-routing.module.ts","webpack:///src/app/Auth/register-page/register-page.module.ts","webpack:///src/app/Auth/register-page/register-page.page.scss","webpack:///src/app/Auth/register-page/register-page.page.ts","webpack:///src/app/services/request.service.ts"],"names":["routes","path","component","RegisterPagePageRoutingModule","imports","forChild","exports","RegisterPagePageModule","declarations","RegisterPagePage","router","authService","UserData","utils","loadingPresent","register","subscribe","Response","storeItem","buildAccessData","loadingDismiss","navigate","Errors","alertPresent","buildErrors","replaceUrl","selector","template","RequestService","httpClient","AUTH_SERVER_ADDRESS","HEADERS","END_POINTS","PARAMETERS","headers","endPoint","parameters","tokenRequired","token","set","forEach","Header","object","post","createHeaders","selectEnpoint","parameter","typeParameter","get","selectParameters","id","console","log","put","providedIn"],"mappings":"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","file":"Auth-register-page-register-page-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n\\t<ion-toolbar>\\r\\n\\t\\t<ion-title>RegisterPage</ion-title>\\r\\n\\t</ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\t<ion-card>\\r\\n\\t\\t<form (ngSubmit)=\\\"registerForm()\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<ion-item lines=\\\"full\\\">\\r\\n\\t\\t\\t\\t<ion-icon name=\\\"person-circle-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n\\t\\t\\t\\t<ion-label position=\\\"floating\\\">Name</ion-label>\\r\\n\\t\\t\\t\\t<ion-input type=\\\"text\\\" [(ngModel)]='UserData.name' name=\\\"name\\\" required></ion-input>\\r\\n\\t\\t\\t</ion-item>\\r\\n\\t\\t\\t<ion-item lines=\\\"full\\\">\\r\\n\\t\\t\\t\\t<ion-icon name=\\\"mail-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n\\t\\t\\t\\t<ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n\\t\\t\\t\\t<ion-input type=\\\"text\\\" [(ngModel)]='UserData.email' name=\\\"email\\\" required></ion-input>\\r\\n\\t\\t\\t</ion-item>\\r\\n\\t\\t\\t<ion-item lines=\\\"full\\\">\\r\\n\\t\\t\\t\\t<ion-icon name=\\\"key-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n\\t\\t\\t\\t<ion-label position=\\\"floating\\\">Password</ion-label>\\r\\n\\t\\t\\t\\t<ion-input type=\\\"password\\\" [(ngModel)]='UserData.password' name=\\\"password\\\" required></ion-input>\\r\\n\\t\\t\\t</ion-item>\\r\\n\\t\\t\\t<ion-item lines=\\\"full\\\">\\r\\n\\t\\t\\t\\t<ion-icon name=\\\"key-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n\\t\\t\\t\\t<ion-label position=\\\"floating\\\">Confirm Password</ion-label>\\r\\n\\t\\t\\t\\t<ion-input type=\\\"password\\\" [(ngModel)]='UserData.password_confirmation' name=\\\"password_confirmation\\\" required></ion-input>\\r\\n\\t\\t\\t</ion-item>\\r\\n\\r\\n\\r\\n\\t\\t\\t<ion-card-content>\\r\\n\\t\\t\\t\\t<ion-row>\\r\\n\\t\\t\\t\\t\\t<ion-col>\\r\\n\\t\\t\\t\\t\\t\\t<ion-button type=\\\"submit\\\" color=\\\"primary\\\" expand=\\\"block\\\">Sing Up</ion-button>\\r\\n\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/forgot-password']\\\" class=\\\"small-text\\\">Forgot Password?</a>\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t</ion-row>\\r\\n\\t\\t\\t\\t<ion-row>\\r\\n\\t\\t\\t\\t\\t<ion-col>\\r\\n\\t\\t\\t\\t\\t\\t<ion-button color=\\\"danger\\\" expand=\\\"block\\\" (click)=\\\"LoginPage()\\\">Login</ion-button>\\r\\n\\t\\t\\t\\t\\t</ion-col>\\r\\n\\t\\t\\t\\t</ion-row>\\r\\n\\t\\t\\t</ion-card-content>\\r\\n\\t\\t</form>\\r\\n\\t</ion-card>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPagePage } from './register-page.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPagePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPagePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPagePageRoutingModule } from './register-page-routing.module';\r\n\r\nimport { RegisterPagePage } from './register-page.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPagePageRoutingModule\r\n  ],\r\n  declarations: [RegisterPagePage]\r\n})\r\nexport class RegisterPagePageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0F1dGgvcmVnaXN0ZXItcGFnZS9yZWdpc3Rlci1wYWdlLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { LoadingController, AlertController } from '@ionic/angular';\r\nimport { User } from 'src/app/Models/Classes/user';\r\nimport { Utils } from 'src/app/Models/Classes/utils';\r\nimport { AuthService } from 'src/app/services/Auth/auth.service';\r\n\r\n@Component({\r\n\tselector: 'app-register-page',\r\n\ttemplateUrl: './register-page.page.html',\r\n\tstyleUrls: ['./register-page.page.scss'],\r\n})\r\nexport class RegisterPagePage implements OnInit {\r\n\tpublic UserData: User;\r\n\tprivate utils: Utils;\r\n\tconstructor(\r\n\t\tprivate router: Router,\r\n        private authService: AuthService,\r\n\t) { \r\n\t\tthis.UserData = new User();\r\n        this.utils = new Utils();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\r\n\t}\r\n\r\n\tasync registerForm() {\r\n\t\tawait this.utils.loadingPresent();\r\n\t\tthis.authService.register(this.UserData).subscribe(\r\n\t\t\t(Response: (any)) => {\r\n\t\t\t\tthis.utils.storeItem('AccessDataUser', this.utils.buildAccessData(Response));\r\n\t\t\t\tthis.utils.loadingDismiss();\r\n\t\t\t\tthis.router.navigate(['/home']);\r\n\t\t\t},\r\n\t\t\t(Errors: (any)) => {\r\n\t\t\t\tthis.utils.loadingDismiss();\r\n\t\t\t\tthis.utils.alertPresent('Errors', this.utils.buildErrors(Errors), 'OK');\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tthis.utils.loadingDismiss();\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tpublic LoginPage() {\r\n\t\tthis.router.navigate(['/login'], { replaceUrl: true });\r\n\t}\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class RequestService {\r\n\tprivate AUTH_SERVER_ADDRESS : string;\r\n\tprivate HEADERS : Array<Array<string>>;\r\n\tprivate END_POINTS : Array<string>;\r\n\tprivate PARAMETERS : Array<string>;\r\n\tprivate headers : HttpHeaders;\r\n\r\n\tconstructor(\r\n\t\tpublic httpClient : HttpClient\r\n\t) { \r\n\t\tthis.AUTH_SERVER_ADDRESS = 'http://192.168.100.100:8000/api/';\r\n\t\tthis.HEADERS = [['Content-Type', 'application/json'], ['Authorization', ''], ['responseType','text']];\r\n\t\tthis.END_POINTS = ['login', 'register', 'publications', 'assist', 'join', 'joined'];\r\n\t\tthis.PARAMETERS = ['?page=', '?id_detail=', '/'];\r\n\t\tthis.headers = new HttpHeaders();\r\n\t}\r\n\r\n\tprivate selectEnpoint(endPoint:string){\r\n\t\tswitch (endPoint) {\r\n\t\t\tcase 'login':\r\n\t\t\t\treturn this.END_POINTS[0];\r\n\t\t\tcase 'register':\r\n\t\t\t\treturn this.END_POINTS[1];\r\n\t\t\tcase 'publication':\r\n\t\t\t\treturn this.END_POINTS[2];\r\n\t\t\tcase 'assist':\r\n\t\t\t\treturn this.END_POINTS[3];\r\n\t\t\tcase 'join':\r\n\t\t\t\treturn this.END_POINTS[4];\r\n\t\t\tcase 'joined':\r\n\t\t\t\treturn this.END_POINTS[5];\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn \r\n\t}\r\n\r\n\tprivate selectParameters(parameters:string){\r\n\t\tswitch (parameters) {\r\n\t\t\tcase 'page':\r\n\t\t\t\treturn this.PARAMETERS[0];\r\n\t\t\tcase 'id_detail':\r\n\t\t\t\treturn this.PARAMETERS[1];\r\n\t\t\tcase 'id':\r\n\t\t\t\treturn this.PARAMETERS[2];\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn \r\n\t}\r\n\r\n\tprivate createHeaders( tokenRequired: boolean, token?: string ) : HttpHeaders {\r\n\t\tif( !tokenRequired ) this.headers = this.headers.set(this.HEADERS[0][0], this.HEADERS[0][1]);\r\n\t\telse{\r\n\t\t\tthis.HEADERS.forEach(Header => {\r\n\t\t\t\tif ( Header[0] === \"Authorization\"){\r\n\t\t\t\t\tif(token != null ){\r\n\t\t\t\t\t\tthis.headers = this.headers.set(Header[0], token);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.headers = this.headers.set(Header[0], Header[1]);\r\n\t\t\t\t}\t\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this.headers;\r\n\t}\r\n\r\n\tpublic createRequest(object: any, endPoint: string, post: boolean, token?: string) : Observable<any> {\r\n\t\tconst headers = this.createHeaders( post, token);\r\n\t\treturn this.httpClient.post<any>(this.AUTH_SERVER_ADDRESS + this.selectEnpoint(endPoint), object,  { headers } );\r\n\t}\r\n\r\n\tpublic createRequestGet(endPoint: string, post: boolean, token?: string, parameter?:number, typeParameter?:string) : Observable<any> {\r\n\t\tconst headers = this.createHeaders( post, token);\r\n\t\tif(parameter){\r\n\t\t\treturn this.httpClient.get<any>(this.AUTH_SERVER_ADDRESS + this.selectEnpoint(endPoint)+ this.selectParameters(typeParameter) +parameter, { headers } );\r\n\t\t}else{\r\n\t\t\treturn this.httpClient.get<any>(this.AUTH_SERVER_ADDRESS + this.selectEnpoint(endPoint), { headers } );\r\n\t\t}\r\n\t}\r\n\r\n\tpublic createRequestUpdate(parameter: string, endPoint: string, post: boolean, token?: string, id?:number) : Observable<any> {\r\n\t\tconst headers = this.createHeaders( post, token);\r\n\t\tconsole.log(headers);\r\n\t\treturn this.httpClient.put<any>(this.AUTH_SERVER_ADDRESS + this.selectEnpoint(endPoint) + this.selectParameters(parameter) + id , id, { headers } );\r\n\t}\r\n\r\n}\r\n"]}